import 'dart:async';

import 'package:dio/dio.dart';
import 'package:retrofit/retrofit.dart';

{{#operations}}
{{#modelImports}}import 'package:{{pubName}}/model/{{.}}.dart';
{{/modelImports}}
{{#fullImports}}import '{{.}}';
{{/fullImports}}

part 'api.g.dart';

@RestApi()
abstract class {{clientName}} {
  factory {{clientName}}(Dio dio, {String baseUrl}) = _{{clientName}};

  {{#operation}}
    {{{summary}}}
    @{{httpMethod}}("{{path}}")
    {{#hasFormParams}}
      @FormUrlEncoded()
    {{/hasFormParams}}
    Future<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}}> {{nickname}}(
    {{#requiredParams}}
      {{{description}}}
      {{#isHeaderParam}}@Header("{{baseName}}") {{{dataType}}} {{paramName}},{{/isHeaderParam}}{{#isQueryParam}}@Query("{{baseName}}") {{{dataType}}} {{paramName}},{{/isQueryParam}}{{#isFormParam}}@Field("{{baseName}}") {{{dataType}}} {{paramName}},{{/isFormParam}}{{#isBodyParam}}@Body() {{{dataType}}} {{paramName}},{{/isBodyParam}}
    {{/requiredParams}}
    {{#hasOptionalParams}}
      [
        {{#optionalParams}}
          {{{description}}}
          {{#isHeaderParam}}@Header("{{baseName}}") {{{dataType}}} {{paramName}},{{/isHeaderParam}}{{#isQueryParam}}@Query("{{baseName}}") {{{dataType}}} {{paramName}},{{/isQueryParam}}{{#isFormParam}}@Field("{{baseName}}") {{{dataType}}} {{paramName}},{{/isFormParam}}{{#isBodyParam}}@Body() {{{dataType}}} {{paramName}},{{/isBodyParam}}
        {{/optionalParams}}
      ]
    {{/hasOptionalParams}}
    );
  {{/operation}}
}
{{/operations}}