
{{#jsonFormat}}
/* {{description}} */
class {{classname}} {
  final {{dataType}} value;

  const {{classname}}._internal(this.value);

  {{#allowableValues}}
  {{#enumVars}}
  {{#enumDescription}}
  /* {{{enumDescription}}} */
  {{/enumDescription}}
  static const {{classname}} {{{name}}} = const {{classname}}._internal({{{value}}});
  {{#hasMore}}

  {{/hasMore}}
  {{/enumVars}}
  {{/allowableValues}}
}

class {{classname}}FieldProcessor implements FieldProcessor<{{classname}}, {{dataType}}> {
    const {{classname}}FieldProcessor();

    {{classname}} deserialize({{dataType}} data) {
        switch (data) {
        {{#allowableValues}}
            {{#enumVars}}
            case {{{value}}}: return {{classname}}.{{{name}}};
            {{/enumVars}}
        {{/allowableValues}}
            default: throw('Unknown enum value to decode: $data');
        }
    }

    {{dataType}} serialize({{classname}} item) {
        return item.value;
    }
}
{{/jsonFormat}}
